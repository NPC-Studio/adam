use serde::{Deserialize, Serialize};
use std::path::PathBuf;

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct BuildData {
    pub config_run: usize,
    pub project_dir: PathBuf,
    pub project_name: String,
    pub output_subfolder: String,
    pub help_port: usize,
    pub debugger_port: usize,
    pub verbosity: bool,
    pub application_path: PathBuf,
}

#[derive(Debug, Serialize, Deserialize, Clone)]
struct BuildBff {
    /// the target file, always empty
    target_file: PathBuf,

    /// the asset compiler? always empty
    asset_compiler: PathBuf,

    /// truthy string for debug builds
    debug: String,

    /// the final WAD name
    compile_output_file_name: PathBuf,

    /// always true?
    use_shaders: String,

    /// steam config, apid, etc
    steam_options: PathBuf,

    /// the config delta name from the IDE
    config: String,

    /// folder to store build info
    output_folder: PathBuf,

    /// The name of the project
    project_name: String,

    /// Not project macros, these are IDE macros (${project_path}, ${project_name}); generated by the IDE
    macros: PathBuf,

    /// root directory of the project
    project_dir: PathBuf,

    /// Per-project, per-user preferences for each build type
    preferences: PathBuf,

    /// path to the yyp
    project_path: PathBuf,

    /// Path to a working directory.
    temp_folder: PathBuf,

    /// Path to the same working directory, who knows
    temp_folder_unmapper: PathBuf,

    /// Path to the users data...{CONFIG_ROOT}/jjspira_1226692
    user_dir: PathBuf,

    /// The runtime location to the Path.../Users/Shared/GameMakerStudio2/Cache/runtimes/runtime-2.3.0.401
    runtime_location: PathBuf,

    /// Target Options for the current build...{CONFIG_LOCATION}/targetoptions.json
    target_options: PathBuf,

    /// Some sort of bitmask? not exactly sure...2
    target_mask: String,

    /// The path to the Gms2 IDE executable...Applications/GameMaker Studio 2.app/Contents/MonoBundle/GameMaker Studio 2.exe
    application_path: PathBuf,

    /// A truthy string
    verbose: String,

    /// The help port for the manual i think? 51290 maybe html5
    help_port: String,

    /// The port for the debugger? 6509
    debugger_path: String,
}

/*
{
    "targetFile": " ",
    "assetCompiler": "",
    "debug": "False",
    "compile_output_file_name": "{TEMP_FOLDER}/{OUTPUT_SUBFOLDER}/{PROJECT_NAME}.win",
    "useShaders": "True",
    "steamOptions": "{CONFIG_LOCATION}/steam_options.yy",
    "config": "Default",
    "outputFolder": "{TEMP_FOLDER}/{OUTPUT_SUBFOLDER}",
    "projectName": "{PROJECT_NAME}",
    "macros": "{CONFIG_LOCATION}/macros.json",
    "projectDir": "{PROJECT_DIR}",
    "preferences": "{CONFIG_LOCATION}/preferences.json",
    "projectPath": "{PROJECT_DIR}/{PROJECT_NAME}.yyp",
    "tempFolder": "{TEMP_FOLDER}",
    "tempFolderUnmapped": "{TEMP_FOLDER}",
    "userDir": "{CONFIG_ROOT}/jjspira_1226692",
    "runtimeLocation": "/Users/Shared/GameMakerStudio2/Cache/runtimes/runtime-2.3.0.401",
    "targetOptions": "{CONFIG_LOCATION}/targetoptions.json",
    "targetMask": "2",
    "applicationPath": "/Applications/GameMaker Studio 2.app/Contents/MonoBundle/GameMaker Studio 2.exe",
    "verbose": "False",
    "helpPort": "51290",
    "debuggerPort": "6509"
}
*/
